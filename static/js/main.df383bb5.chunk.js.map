{"version":3,"sources":["components/MapGL/MapGL.js","components/App/App.js","index.js"],"names":["Map","ReactMapboxGl","accessToken","MapGL","props","state","lng","lat","zoom","createPollingFeatures","this","pollingData","reduce","acc","poll","index","location","push","key","coordinates","longitude","latitude","properties","className","style","center","type","id","paint","Component","App","fetchPollingPoints","a","settings","method","headers","fetch","response","ok","Error","json","pollData","setState","pollLocations","console","log","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGMA,EAAMC,YAAc,CACtBC,YAAa,sGAGIC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,UACNC,IAAK,SACLC,KAAM,CAAC,KALI,E,qDAUf,IACMC,EAAwBC,KAAKN,MAAMO,YAAYC,QAAO,SAACC,EAAKC,EAAMC,GAShE,OARID,EAAKE,UACLH,EAAII,KACA,kBAAC,IAAD,CACIC,IAAKH,EACLI,YAAa,CAACL,EAAKE,SAASI,UAAWN,EAAKE,SAASK,UACrDC,WAAYR,KAGjBD,IACR,IAEP,OACI,kBAACb,EAAD,CACIuB,UAAU,MACVC,MAhBa,0DAiBbC,OAAQ,CAACf,KAAKL,MAAMC,IAAKI,KAAKL,MAAME,KACpCC,KAAME,KAAKL,MAAMG,MAEjB,kBAAC,IAAD,CAAOkB,KAAK,SAASC,GAAG,SAASC,MAAO,CACpC,eAAgB,UAChB,sBAAuB,EACvB,sBAAuB,UACvB,wBAAyB,KAGxBnB,Q,GAtCcoB,aCFdC,E,kDACnB,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAMR2B,mBAPmB,sBAOE,gCAAAC,EAAA,sEAEXC,EAAW,CACfC,OAAQ,MAAOC,QAAS,CAAE,eAAgB,mBAAoB,cAAe,8BAH9D,SAKMC,MAAM,wDAAyDH,GALrE,WAKXI,EALW,QAMHC,GANG,sBAOT,IAAIC,MAAM,aAPD,uBASMF,EAASG,OATf,OASXC,EATW,OAUjB,EAAKC,SAAS,CAAEC,cAAeF,IAVd,kDAajBG,QAAQC,IAAI,KAAEC,SAbG,0DALnB,EAAKzC,MAAQ,CACXsC,cAAe,IAHA,E,gEAyBjBjC,KAAKqB,uB,+BAIL,OACE,yBAAKR,UAAU,OACb,yBAAKA,UAAU,SACb,6CACA,mEAEF,kBAAC,EAAD,CAAKZ,YAAaD,KAAKL,MAAMsC,gBAC7B,wBAAIpB,UAAU,UAAd,2D,GArCyBM,aCDjCkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.df383bb5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './MapGL.scss';\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nconst Map = ReactMapboxGl({\n    accessToken: \"pk.eyJ1Ijoiam9lbC1vZS1sYWNleSIsImEiOiJja2Jnb3h5enoxN2tlMndtcmV0Zjl4YmJxIn0.xwAtV-aaryVr5CNqRs9LxQ\"\n});\n\nexport default class MapGL extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lng: -73.935242,\n            lat: 40.730610,\n            zoom: [10],\n        };\n    }\n\n    render() {\n        const MAPBOX_STYLE = 'mapbox://styles/joel-oe-lacey/ckbgpw4dh0bvv1ipdym0olpg4';\n        const createPollingFeatures = this.props.pollingData.reduce((acc, poll, index) => {\n                if (poll.location) {\n                    acc.push(\n                        <Feature\n                            key={index}\n                            coordinates={[poll.location.longitude, poll.location.latitude]}\n                            properties={poll}\n                        />)\n                }\n                return acc;\n            }, [])\n\n        return (\n            <Map \n                className='map'\n                style={MAPBOX_STYLE}\n                center={[this.state.lng, this.state.lat]}\n                zoom={this.state.zoom}\n            >\n                <Layer type=\"circle\" id=\"marker\" paint={{\n                    'circle-color': '#ff6602',\n                    'circle-stroke-width': 1,\n                    'circle-stroke-color': '#003585',\n                    'circle-stroke-opacity': .7\n                }}\n                >\n                    {createPollingFeatures}\n                </Layer>\n            </Map>\n        )\n    }\n};","import React, { Component } from 'react';\nimport './App.scss';\nimport Map from '../MapGL/MapGL';\n\n\nexport default class App extends Component  {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pollLocations: []\n    };\n  }\n\n  fetchPollingPoints = async () => {\n    try {\n      const settings = {\n        method: \"GET\", headers: { \"Content-Type\": \"application/json\", 'X-App-Token': \"I4HU56w9UWCUEicW4AxsHDNck\" }\n      };\n      const response = await fetch('https://data.cityofnewyork.us/resource/utqd-4534.json', settings);\n      if (!response.ok) {\n        throw new Error('API error');\n      }\n      const pollData = await response.json();\n      this.setState({ pollLocations: pollData })\n    }\n    catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  componentDidMount() {\n    this.fetchPollingPoints()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"title\">\n          <h1>Democracy NYC</h1>\n          <h2>Find your nearest polling location</h2>\n        </div>\n        <Map pollingData={this.state.pollLocations} />\n        <h3 className='footer'>Polling locations sourced live from NYC's SODA API</h3>\n      </div>\n    );\n  } \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}